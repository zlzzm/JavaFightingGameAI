class moves {
  lightAttackAnimation lAni;
  heavyAttackAnimation hAni;
  blockAnimation bAni;

  moves(lightAttackAnimation l, heavyAttackAnimation h, blockAnimation b) {
    lAni = l;
    hAni = h;
    bAni = b;
  }


  void light(player attacker, player receiver) {
    lAni.show(attacker);
    attacker.aniLIGHT = true;

    if (!receiver.boolBLOCK) {
      // attacking LEFT
      if (attacker.facingLeft && attacker.x > receiver.x && attacker.x - receiver.x < 139 && abs(attacker.y - receiver.y) < 50 && (!receiver.isBlocking)) receiver.health -= 5;
      // attacking RIGHT
      else if (!attacker.facingLeft && attacker.x < receiver.x && receiver.x - attacker.x < 139 && abs(attacker.y - receiver.y) < 50 && (!receiver.isBlocking)) receiver.health -= 5;
    }
  }

  void heavy(player attacker, player receiver) {
    hAni.show(attacker.x, attacker.y, attacker);
    attacker.aniHEAVY = true;

    if (!receiver.boolBLOCK) {
      // attack right
      if (attacker.facingLeft && attacker.x > receiver.x && attacker.x - receiver.x < 139 && abs(attacker.y - receiver.y) < 50 &&  (!receiver.isBlocking)) receiver.health -= 10;
      // attack left
      else if (!attacker.facingLeft && attacker.x < receiver.x && receiver.x - attacker.x < 139 && abs(attacker.y - receiver.y) < 50 && (!receiver.isBlocking))  receiver.health -= 10;
    }
  }

  void block(player blocker) {
    bAni.show(blocker);
    blocker.blockStartTime = millis();
    blocker.isBlocking = true;
  }
}
